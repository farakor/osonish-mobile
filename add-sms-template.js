/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SMS —à–∞–±–ª–æ–Ω–∞ –≤ Eskiz.uz
 * –ó–∞–ø—É—Å–∫: node add-sms-template.js
 */

require('dotenv').config();

const addSMSTemplate = async () => {
  console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ SMS —à–∞–±–ª–æ–Ω–∞ –≤ Eskiz.uz...\n');

  const email = process.env.ESKIZ_EMAIL;
  const password = process.env.ESKIZ_PASSWORD;
  const baseUrl = process.env.ESKIZ_BASE_URL || 'https://notify.eskiz.uz/api';

  // –®–∞–±–ª–æ–Ω—ã SMS –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  const templates = [
    '–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è Oson Ish: {code}. –ù–µ —Å–æ–æ–±—â–∞–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∏–∫–æ–º—É.',
    '–ö–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ Oson Ish: {code}',
    'Oson Ish verification code: {code}',
    '–í–∞—à –∫–æ–¥: {code}. Oson Ish'
  ];

  try {
    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    console.log('üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è...');
    const authResponse = await fetch(`${baseUrl}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: email,
        password: password,
      }),
    });

    const authData = await authResponse.json();

    if (!authResponse.ok || !authData.data?.token) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authData);
      return;
    }

    console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞\n');

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω
    for (let i = 0; i < templates.length; i++) {
      const template = templates[i];
      console.log(`üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ ${i + 1}/${templates.length}:`);
      console.log(`"${template}"`);

      try {
        const templateResponse = await fetch(`${baseUrl}/message/sms/send-batch`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${authData.data.token}`,
          },
          body: JSON.stringify({
            messages: [{
              user_sms_id: `template_${Date.now()}_${i}`,
              to: '998901234567', // –¢–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä
              text: template.replace('{code}', '123456')
            }],
            from: process.env.SMS_SENDER_NAME || 'OsonIsh',
            dispatch_id: `template_batch_${Date.now()}`
          }),
        });

        const templateData = await templateResponse.json();
        
        if (templateResponse.ok) {
          console.log('‚úÖ –®–∞–±–ª–æ–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é');
        } else {
          console.log('‚ö†Ô∏è –û—Ç–≤–µ—Ç:', templateData.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
        }
      } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞:', error.message);
      }

      console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    }

    console.log('üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –ó–∞–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç my.eskiz.uz');
    console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–°–ú–°" ‚Üí "–ú–æ–∏ —Ç–µ–∫—Å—Ç—ã"');
    console.log('3. –î–æ–±–∞–≤—å—Ç–µ —à–∞–±–ª–æ–Ω –≤—Ä—É—á–Ω—É—é:');
    console.log('   "–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è Oson Ish: {code}. –ù–µ —Å–æ–æ–±—â–∞–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∏–∫–æ–º—É."');
    console.log('4. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º');
    console.log('5. –ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
};

addSMSTemplate();
