/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS —á–µ—Ä–µ–∑ Eskiz.uz
 * –ó–∞–ø—É—Å–∫: node test-real-sms.js +998901234567
 */

require('dotenv').config();

const testRealSMS = async (phoneNumber) => {
  console.log('üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS —á–µ—Ä–µ–∑ Eskiz.uz...\n');

  if (!phoneNumber) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node test-real-sms.js +998901234567');
    process.exit(1);
  }

  const email = process.env.ESKIZ_EMAIL;
  const password = process.env.ESKIZ_PASSWORD;
  const baseUrl = process.env.ESKIZ_BASE_URL || 'https://notify.eskiz.uz/api';
  const senderName = process.env.SMS_SENDER_NAME || 'OsonIsh';

  console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
  console.log(`–ù–æ–º–µ—Ä: ${phoneNumber}`);
  console.log(`–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: ${senderName}`);
  console.log(`Email: ${email}\n`);

  try {
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const formattedPhone = phoneNumber.replace(/\D/g, '');
    let finalPhone = formattedPhone;
    
    if (formattedPhone.startsWith('998')) {
      finalPhone = formattedPhone;
    } else if (formattedPhone.startsWith('8') && formattedPhone.length === 10) {
      finalPhone = '998' + formattedPhone.slice(1);
    } else if (formattedPhone.startsWith('9') && formattedPhone.length === 9) {
      finalPhone = '998' + formattedPhone;
    }

    console.log(`üìû –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: ${finalPhone}`);

    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    console.log('üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è...');
    const authResponse = await fetch(`${baseUrl}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: email,
        password: password,
      }),
    });

    const authData = await authResponse.json();

    if (!authResponse.ok || !authData.data?.token) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authData);
      return;
    }

    console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥
    const testCode = Math.floor(100000 + Math.random() * 900000).toString();
    const message = `–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è Oson Ish: ${testCode}. –ù–µ —Å–æ–æ–±—â–∞–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∏–∫–æ–º—É.`;

    console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`);
    console.log(`üî¢ –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥: ${testCode}`);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º SMS
    console.log('\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ SMS...');
    
    const smsPayload = {
      mobile_phone: finalPhone,
      message: message,
      from: senderName
    };

    const smsResponse = await fetch(`${baseUrl}/message/sms/send`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${authData.data.token}`,
      },
      body: JSON.stringify(smsPayload),
    });

    const smsData = await smsResponse.json();

    console.log('üìä –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', smsData);

    if (smsResponse.ok && smsData.id) {
      console.log('\nüéâ SMS —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      console.log(`üìß ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${smsData.id}`);
      console.log(`üì± –ù–æ–º–µ—Ä: +${finalPhone}`);
      console.log(`üî¢ –ö–æ–¥: ${testCode}`);
      console.log('\n‚è∞ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SMS –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
      const balanceResponse = await fetch(`${baseUrl}/user/get-limit`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${authData.data.token}`,
        },
      });

      if (balanceResponse.ok) {
        const balanceData = await balanceResponse.json();
        console.log(`üí∞ –û—Å—Ç–∞–≤—à–∏–π—Å—è –±–∞–ª–∞–Ω—Å: ${balanceData.balance} SMS`);
      }

    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS:', smsData);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
      if (smsData.message) {
        console.log('\nüîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        if (smsData.message.includes('balance')) {
          console.log('- –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ');
        }
        if (smsData.message.includes('sender')) {
          console.log('- –ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–æ');
        }
        if (smsData.message.includes('phone')) {
          console.log('- –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
        }
      }
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
};

// –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const phoneNumber = process.argv[2];
testRealSMS(phoneNumber);
