#!/usr/bin/env node

/**
 * üî• –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Firebase –¥–ª—è Osonish
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Firebase –ø—Ä–æ–µ–∫—Ç –¥–ª—è push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node setup-firebase.js
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üî• === –ù–ê–°–¢–†–û–ô–ö–ê FIREBASE –î–õ–Ø OSONISH ===\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ google-services.json
function checkGoogleServicesFile() {
  const filePath = path.join(__dirname, 'google-services.json');
  
  if (fs.existsSync(filePath)) {
    console.log('‚úÖ –§–∞–π–ª google-services.json –Ω–∞–π–¥–µ–Ω');
    
    try {
      const content = fs.readFileSync(filePath, 'utf8');
      const config = JSON.parse(content);
      
      console.log('üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:');
      console.log(`   - Project ID: ${config.project_info?.project_id || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
      console.log(`   - Project Number: ${config.project_info?.project_number || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
      console.log(`   - Package Name: ${config.client?.[0]?.client_info?.android_client_info?.package_name || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º package name
      const expectedPackageName = 'com.farakor.osonishmobile';
      const actualPackageName = config.client?.[0]?.client_info?.android_client_info?.package_name;
      
      if (actualPackageName === expectedPackageName) {
        console.log('‚úÖ Package name –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
      } else {
        console.log('‚ùå Package name –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É:');
        console.log(`   –û–∂–∏–¥–∞–µ—Ç—Å—è: ${expectedPackageName}`);
        console.log(`   –ù–∞–π–¥–µ–Ω: ${actualPackageName}`);
        console.log('‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Å–æ–∑–¥–∞–π—Ç–µ Firebase –ø—Ä–æ–µ–∫—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º package name');
      }
      
      return true;
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è google-services.json:', error.message);
      return false;
    }
  } else {
    console.log('‚ùå –§–∞–π–ª google-services.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
    console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Ñ–∞–π–ª–∞:');
    console.log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://console.firebase.google.com/');
    console.log('2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π');
    console.log('3. –î–æ–±–∞–≤—å—Ç–µ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å package name: com.farakor.osonishmobile');
    console.log('4. –°–∫–∞—á–∞–π—Ç–µ google-services.json');
    console.log('5. –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: osonish-mobile/google-services.json');
    console.log('6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞\n');
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É EAS CLI
function checkEASCLI() {
  try {
    execSync('npx eas --version', { stdio: 'pipe' });
    console.log('‚úÖ EAS CLI –¥–æ—Å—Ç—É–ø–µ–Ω');
    return true;
  } catch (error) {
    console.log('‚ùå EAS CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞: npm install -g @expo/eas-cli');
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Expo
function checkExpoAuth() {
  try {
    const result = execSync('npx eas whoami', { encoding: 'utf8', stdio: 'pipe' });
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Expo –∫–∞–∫:', result.trim());
    return true;
  } catch (error) {
    console.log('‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Expo');
    console.log('–í—ã–ø–æ–ª–Ω–∏—Ç–µ: npx eas login');
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é app.json
function checkAppConfig() {
  const appJsonPath = path.join(__dirname, 'app.json');
  
  if (!fs.existsSync(appJsonPath)) {
    console.log('‚ùå –§–∞–π–ª app.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return false;
  }
  
  try {
    const content = fs.readFileSync(appJsonPath, 'utf8');
    const config = JSON.parse(content);
    
    const androidConfig = config.expo?.android;
    const iosConfig = config.expo?.ios;
    
    console.log('üì± –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:');
    console.log(`   - Android package: ${androidConfig?.package || '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`   - iOS bundle ID: ${iosConfig?.bundleIdentifier || '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`   - Google Services File: ${androidConfig?.googleServicesFile || '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è
    const issues = [];
    
    if (androidConfig?.package !== 'com.farakor.osonishmobile') {
      issues.push('Android package name –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: com.farakor.osonishmobile');
    }
    
    if (iosConfig?.bundleIdentifier !== 'com.farakor.osonishmobile') {
      issues.push('iOS bundle identifier –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: com.farakor.osonishmobile');
    }
    
    if (androidConfig?.googleServicesFile !== './google-services.json') {
      issues.push('googleServicesFile –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ ./google-services.json');
    }
    
    if (issues.length > 0) {
      console.log('‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
      issues.forEach(issue => console.log(`   - ${issue}`));
      return false;
    }
    
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è app.json –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
    return true;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è app.json:', error.message);
    return false;
  }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Android credentials
function setupAndroidCredentials() {
  console.log('\nü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Android credentials...');
  
  try {
    console.log('–ó–∞–ø—É—Å–∫: npx eas credentials:configure --platform android');
    console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:');
    console.log('1. –í—ã–±–µ—Ä–∏—Ç–µ "Set up Google Service Account Key" –µ—Å–ª–∏ —Å–ø—Ä–æ—Å—è—Ç');
    console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ "Generate new Android Keystore" –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞');
    console.log('3. –ò–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π keystore –µ—Å–ª–∏ –æ–Ω —É –≤–∞—Å –µ—Å—Ç—å');
    
    // –ù–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —Ç–∞–∫ –∫–∞–∫ —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    console.log('\n‚ö†Ô∏è  –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤—Ä—É—á–Ω—É—é:');
    console.log('npx eas credentials:configure --platform android');
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Android credentials:', error.message);
  }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ iOS credentials
function setupIOSCredentials() {
  console.log('\nüçé –ù–∞—Å—Ç—Ä–æ–π–∫–∞ iOS credentials...');
  
  console.log('üìã –î–ª—è iOS –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:');
  console.log('1. Apple Developer Account ($99/–≥–æ–¥)');
  console.log('2. APNs Key (.p8 —Ñ–∞–π–ª) –∏–∑ Apple Developer Console');
  console.log('3. Key ID –∏ Team ID');
  
  console.log('\n‚ö†Ô∏è  –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è Apple Developer Account –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
  console.log('npx eas credentials:configure --platform ios');
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–∏–ª–¥–∞
function suggestTestBuild() {
  console.log('\nüî® –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–∏–ª–¥–∞:');
  console.log('\nüìã –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ credentials –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
  console.log('# –î–ª—è Android:');
  console.log('npx eas build --platform android --profile preview');
  console.log('\n# –î–ª—è iOS (—Ç—Ä–µ–±—É–µ—Ç Apple Developer Account):');
  console.log('npx eas build --platform ios --profile preview');
  console.log('\n# –î–ª—è –æ–±–µ–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º:');
  console.log('npx eas build --platform all --profile preview');
}

// –°–æ–∑–¥–∞–Ω–∏–µ .gitignore –∑–∞–ø–∏—Å–µ–π
function updateGitignore() {
  const gitignorePath = path.join(__dirname, '.gitignore');
  
  const entriesToAdd = [
    '# Firebase',
    'google-services.json',
    'GoogleService-Info.plist',
    '',
    '# Apple',
    '*.p8',
    '*.p12',
    '',
    '# Google',
    'google-service-account.json',
    '*.json.key'
  ];
  
  try {
    let gitignoreContent = '';
    
    if (fs.existsSync(gitignorePath)) {
      gitignoreContent = fs.readFileSync(gitignorePath, 'utf8');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å–∏
    const hasFirebaseEntries = gitignoreContent.includes('google-services.json');
    
    if (!hasFirebaseEntries) {
      gitignoreContent += '\n' + entriesToAdd.join('\n') + '\n';
      fs.writeFileSync(gitignorePath, gitignoreContent);
      console.log('‚úÖ .gitignore –æ–±–Ω–æ–≤–ª–µ–Ω (–¥–æ–±–∞–≤–ª–µ–Ω—ã Firebase –∑–∞–ø–∏—Å–∏)');
    } else {
      console.log('‚úÖ .gitignore —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç Firebase –∑–∞–ø–∏—Å–∏');
    }
  } catch (error) {
    console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å .gitignore:', error.message);
    console.log('–î–æ–±–∞–≤—å—Ç–µ –≤—Ä—É—á–Ω—É—é –≤ .gitignore:');
    entriesToAdd.forEach(entry => console.log(entry));
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Firebase...\n');
  
  let allChecksPass = true;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  if (!checkGoogleServicesFile()) allChecksPass = false;
  if (!checkAppConfig()) allChecksPass = false;
  if (!checkEASCLI()) allChecksPass = false;
  if (!checkExpoAuth()) allChecksPass = false;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º .gitignore
  updateGitignore();
  
  if (allChecksPass) {
    console.log('\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ì–æ—Ç–æ–≤ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ credentials.');
    setupAndroidCredentials();
    setupIOSCredentials();
    suggestTestBuild();
  } else {
    console.log('\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º.');
    console.log('–ò—Å–ø—Ä–∞–≤—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤—ã—à–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.');
  }
  
  console.log('\nüìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:');
  console.log('- Firebase Console: https://console.firebase.google.com/');
  console.log('- Apple Developer: https://developer.apple.com/');
  console.log('- EAS Build Docs: https://docs.expo.dev/build/introduction/');
  console.log('- Push Notifications Guide: https://docs.expo.dev/push-notifications/');
  
  console.log('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firebase –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  main().catch(console.error);
}

module.exports = {
  checkGoogleServicesFile,
  checkEASCLI,
  checkExpoAuth,
  checkAppConfig
};
