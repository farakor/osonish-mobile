import AsyncStorage from '@react-native-async-storage/async-storage';
import { authService } from '../services/authService';

/**
 * –û—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∫–µ—à–µ–π
 * –ù–ï –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Supabase
 */
export async function clearLocalData(): Promise<void> {
  try {
    console.log('[ClearLocalData] üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // 1. –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é (–±–µ–∑ –æ—á–∏—Å—Ç–∫–∏ Supabase)
    authService.logout();
    console.log('[ClearLocalData] ‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Å—Å–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—á–∏—â–µ–Ω–∞');

    // 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ –∏–∑ AsyncStorage
    const allKeys = await AsyncStorage.getAllKeys();
    console.log(`[ClearLocalData] üìã –ù–∞–π–¥–µ–Ω–æ ${allKeys.length} –∫–ª—é—á–µ–π –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ`);

    // 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª—é—á–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
    const appKeys = allKeys.filter(key =>
      key.startsWith('@osonish_') ||
      key.startsWith('@temp_') ||
      key.includes('profile') ||
      key.includes('orders') ||
      key.includes('applicants') ||
      key.includes('session') ||
      key.includes('auth') ||
      key.includes('user')
    );

    if (appKeys.length > 0) {
      await AsyncStorage.multiRemove(appKeys);
      console.log(`[ClearLocalData] ‚úÖ –£–¥–∞–ª–µ–Ω–æ ${appKeys.length} –∫–ª—é—á–µ–π:`, appKeys);
    } else {
      console.log('[ClearLocalData] ‚ÑπÔ∏è –õ–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }

    // 4. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–µ—à–∏
    const cacheKeys = [
      'lastOrdersUpdate',
      'lastUsersUpdate',
      'cachedOrders',
      'cachedUsers',
      'userApplications'
    ];

    for (const key of cacheKeys) {
      try {
        await AsyncStorage.removeItem(key);
      } catch (error) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–ª—é—á–µ–π
      }
    }

    console.log('[ClearLocalData] üéâ –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('[ClearLocalData] üìù –î–∞–Ω–Ω—ã–µ –≤ Supabase –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ—Ç—Ä–æ–Ω—É—Ç—ã–º–∏');

    return;
  } catch (error) {
    console.error('[ClearLocalData] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
export async function getLocalDataInfo(): Promise<{
  totalKeys: number;
  appKeys: string[];
  storageSize: string;
}> {
  try {
    const allKeys = await AsyncStorage.getAllKeys();

    const appKeys = allKeys.filter(key =>
      key.startsWith('@osonish_') ||
      key.startsWith('@temp_') ||
      key.includes('profile') ||
      key.includes('orders') ||
      key.includes('applicants') ||
      key.includes('session') ||
      key.includes('auth') ||
      key.includes('user')
    );

    // –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞
    let totalSize = 0;
    for (const key of appKeys) {
      try {
        const value = await AsyncStorage.getItem(key);
        if (value) {
          totalSize += value.length;
        }
      } catch (error) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
      }
    }

    const sizeInKB = (totalSize / 1024).toFixed(2);

    return {
      totalKeys: allKeys.length,
      appKeys,
      storageSize: `${sizeInKB} KB`
    };
  } catch (error) {
    console.error('[ClearLocalData] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
    return {
      totalKeys: 0,
      appKeys: [],
      storageSize: '0 KB'
    };
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è dev —Ä–µ–∂–∏–º–∞
if (__DEV__) {
  (global as any).clearLocalData = clearLocalData;
  (global as any).getLocalDataInfo = getLocalDataInfo;

  console.log('üßπ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
  console.log('- clearLocalData() - –æ—á–∏—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  console.log('- getLocalDataInfo() - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
}