/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
 */

import { supabase } from '../services/supabaseClient';
import { getTranslatedNotificationsForUsers } from './notificationTranslations';

/**
 * –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
 */
export async function debugNotificationDuplication(): Promise<void> {
  console.log('\nüîç === –û–¢–õ–ê–î–ö–ê –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===');

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –∏–∑ –ë–î
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –∏–∑ –ë–î...');
    const { data: workers, error } = await supabase
      .from('users')
      .select('id, preferred_language, first_name, last_name')
      .eq('role', 'worker');

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π:', error);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${workers?.length || 0} –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π`);

    if (!workers || workers.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –≤ –ë–î');
      return;
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ ID
    const workerIds = workers.map(w => w.id);
    const uniqueIds = new Set(workerIds);

    console.log(`üìä –í—Å–µ–≥–æ ID: ${workerIds.length}, —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: ${uniqueIds.size}`);

    if (workerIds.length !== uniqueIds.size) {
      console.error('‚ùå –ù–ê–ô–î–ï–ù–´ –î–£–ë–õ–ò–†–û–í–ê–ù–ù–´–ï ID –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô!');
      const duplicates = workerIds.filter((id, index) => workerIds.indexOf(id) !== index);
      console.error('üîç –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ ID:', duplicates);
    } else {
      console.log('‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–∑—ã–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n2Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —è–∑—ã–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    const languageStats = {
      ru: 0,
      uz: 0,
      null: 0,
      undefined: 0
    };

    workers.forEach(worker => {
      const lang = worker.preferred_language;
      if (lang === 'ru') languageStats.ru++;
      else if (lang === 'uz') languageStats.uz++;
      else if (lang === null) languageStats.null++;
      else languageStats.undefined++;

      console.log(`  - ${worker.id} (${worker.first_name} ${worker.last_name}): —è–∑—ã–∫ = "${lang}"`);
    });

    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —è–∑—ã–∫–æ–≤:', languageStats);

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é getTranslatedNotificationsForUsers...');

    const testParams = {
      title: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑',
      budget: 100000,
      location: '–°–∞–º–∞—Ä–∫–∞–Ω–¥'
    };

    const translatedNotifications = await getTranslatedNotificationsForUsers(
      workerIds,
      'new_order',
      testParams
    );

    console.log(`üìù –§—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ ${translatedNotifications.size} –ø–µ—Ä–µ–≤–æ–¥–æ–≤`);
    console.log('üóÇÔ∏è –î–µ—Ç–∞–ª–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:');

    translatedNotifications.forEach((notification, userId) => {
      const worker = workers.find(w => w.id === userId);
      const expectedLang = worker?.preferred_language || 'ru';

      console.log(`  - ${userId}: "${notification.title}"`);
      console.log(`    –û–∂–∏–¥–∞–µ–º—ã–π —è–∑—ã–∫: ${expectedLang}`);
      console.log(`    –¢–µ–∫—Å—Ç: "${notification.body}"`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —è–∑—ã–∫ –æ–∂–∏–¥–∞–Ω–∏—è–º
      const isRussian = notification.title.includes('–ù–æ–≤—ã–π –∑–∞–∫–∞–∑');
      const isUzbek = notification.title.includes('Yangi buyurtma');

      if (expectedLang === 'uz' && !isUzbek) {
        console.error(`    ‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª—Å—è —É–∑–±–µ–∫—Å–∫–∏–π, –Ω–æ –ø–æ–ª—É—á–µ–Ω –¥—Ä—É–≥–æ–π —è–∑—ã–∫!`);
      } else if (expectedLang === 'ru' && !isRussian) {
        console.error(`    ‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª—Å—è —Ä—É—Å—Å–∫–∏–π, –Ω–æ –ø–æ–ª—É—á–µ–Ω –¥—Ä—É–≥–æ–π —è–∑—ã–∫!`);
      } else {
        console.log(`    ‚úÖ –Ø–∑—ã–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º`);
      }
    });

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ –∫–∞–∂–¥–æ–º —è–∑—ã–∫–µ
    console.log('\n4Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —è–∑—ã–∫–∞–º:');

    let russianCount = 0;
    let uzbekCount = 0;

    translatedNotifications.forEach((notification) => {
      if (notification.title.includes('–ù–æ–≤—ã–π –∑–∞–∫–∞–∑')) {
        russianCount++;
      } else if (notification.title.includes('Yangi buyurtma')) {
        uzbekCount++;
      }
    });

    console.log(`üìä –†—É—Å—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${russianCount}`);
    console.log(`üìä –£–∑–±–µ–∫—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${uzbekCount}`);
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${translatedNotifications.size}`);

    if (russianCount + uzbekCount !== translatedNotifications.size) {
      console.error('‚ùå –û–®–ò–ë–ö–ê: –°—É–º–º–∞ –Ω–µ —Å—Ö–æ–¥–∏—Ç—Å—è! –í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º —è–∑—ã–∫–µ');
    }

    console.log('\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏:', error);
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function debugSingleUserNotification(userId: string): Promise<void> {
  console.log(`\nüîç === –û–¢–õ–ê–î–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ${userId} ===`);

  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: user, error } = await supabase
      .from('users')
      .select('id, preferred_language, first_name, last_name, role')
      .eq('id', userId)
      .single();

    if (error || !user) {
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:', error);
      return;
    }

    console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    console.log(`  - ID: ${user.id}`);
    console.log(`  - –ò–º—è: ${user.first_name} ${user.last_name}`);
    console.log(`  - –†–æ–ª—å: ${user.role}`);
    console.log(`  - –Ø–∑—ã–∫: "${user.preferred_language}"`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥
    const translatedNotifications = await getTranslatedNotificationsForUsers(
      [userId],
      'new_order',
      {
        title: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑',
        budget: 50000,
        location: '–°–∞–º–∞—Ä–∫–∞–Ω–¥'
      }
    );

    console.log(`üìù –ü–æ–ª—É—á–µ–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: ${translatedNotifications.size}`);

    const notification = translatedNotifications.get(userId);
    if (notification) {
      console.log('üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:');
      console.log(`  - –ó–∞–≥–æ–ª–æ–≤–æ–∫: "${notification.title}"`);
      console.log(`  - –¢–µ–∫—Å—Ç: "${notification.body}"`);

      const isRussian = notification.title.includes('–ù–æ–≤—ã–π –∑–∞–∫–∞–∑');
      const isUzbek = notification.title.includes('Yangi buyurtma');

      console.log(`  - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —è–∑—ã–∫: ${isRussian ? '—Ä—É—Å—Å–∫–∏–π' : isUzbek ? '—É–∑–±–µ–∫—Å–∫–∏–π' : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);
    } else {
      console.error('‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏:', error);
  }
}
