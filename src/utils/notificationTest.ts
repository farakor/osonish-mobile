import { notificationService } from '../services/notificationService';
import { authService } from '../services/authService';

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
export class NotificationTest {

  /**
   * –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  static async runFullDiagnostics(): Promise<void> {
    console.log('\nüîç === –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PUSH –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===');

    try {
      // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      await notificationService.diagnosePushNotifications();

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç–æ–∫–µ–Ω–∞
      const currentToken = notificationService.getCurrentPushToken();
      console.log('\nüì± –¢–µ–∫—É—â–∏–π push —Ç–æ–∫–µ–Ω:', currentToken ? '–µ—Å—Ç—å' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');

      if (currentToken) {
        console.log('üé´ –¢–æ–∫–µ–Ω:', currentToken.substring(0, 30) + '...');
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      const authState = authService.getAuthState();
      console.log('\nüë§ –°—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:');
      console.log('   - –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', authState.isAuthenticated);
      console.log('   - User ID:', authState.user?.id || '–Ω–µ—Ç');
      console.log('   - –¢–µ–ª–µ—Ñ–æ–Ω:', authState.user?.phone || '–Ω–µ—Ç');

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      if (authState.user?.id) {
        const settings = await notificationService.getUserNotificationSettings(authState.user.id);
        console.log('\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:');
        console.log('   - –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', settings.allNotificationsEnabled);
      }

      console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
    }
  }

  /**
   * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–∞–º–æ–º—É —Å–µ–±–µ
   */
  static async testSelfNotification(): Promise<boolean> {
    console.log('\nüß™ === –¢–ï–°–¢ –°–ê–ú–û–£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===');

    try {
      const authState = authService.getAuthState();
      if (!authState.isAuthenticated || !authState.user) {
        console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return false;
      }

      console.log('üë§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', authState.user.id);

      const success = await notificationService.testPushNotification();

      if (success) {
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è');
      } else {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
      }

      return success;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      return false;
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ push —Ç–æ–∫–µ–Ω–∞
   */
  static async refreshPushToken(): Promise<boolean> {
    console.log('\nüîÑ === –û–ë–ù–û–í–õ–ï–ù–ò–ï PUSH –¢–û–ö–ï–ù–ê ===');

    try {
      const success = await notificationService.refreshPushToken();

      if (success) {
        console.log('‚úÖ Push —Ç–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
        const newToken = notificationService.getCurrentPushToken();
        if (newToken) {
          console.log('üé´ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω:', newToken.substring(0, 30) + '...');
        }
      } else {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å push —Ç–æ–∫–µ–Ω');
      }

      return success;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error);
      return false;
    }
  }

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  static async addTestLocalNotification(): Promise<boolean> {
    console.log('\nüì± === –¢–ï–°–¢ –õ–û–ö–ê–õ–¨–ù–û–ì–û –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===');

    try {
      const success = await notificationService.addTestNotification();

      if (success) {
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ');
        console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏');
      } else {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
      }

      return success;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
      return false;
    }
  }

  /**
   * –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  static async runFullTest(): Promise<void> {
    console.log('\nüöÄ === –ü–û–õ–ù–´–ô –¢–ï–°–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===');

    // 1. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    await this.runFullDiagnostics();

    // 2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    await this.refreshPushToken();

    // 3. –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    await this.addTestLocalNotification();

    // 4. –¢–µ—Å—Ç push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    await this.testSelfNotification();

    console.log('\nüèÅ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
    console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ __DEV__ —Ä–µ–∂–∏–º–µ
if (__DEV__) {
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏
  (global as any).NotificationTest = NotificationTest;

  console.log('üß™ NotificationTest –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ');
  console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: NotificationTest.runFullTest()');
}
