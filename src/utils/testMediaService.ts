// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MediaService –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å Supabase Storage
import { supabase } from '../services/supabaseClient';

export const testMediaService = async () => {
  console.log('üß™ [Test] –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MediaService...');

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
  console.log('\nüì° [Test] –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
  if (!supabase) {
    console.error('‚ùå [Test] Supabase –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    return false;
  }
  console.log('‚úÖ [Test] Supabase –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  console.log(`üåê [Test] URL: ${supabase.supabaseUrl}`);

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  console.log('\nüë§ [Test] –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
  try {
    const { data: { user }, error: authError } = await supabase.auth.getUser();
    if (authError) {
      console.warn('‚ö†Ô∏è [Test] –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞):', authError.message);
    } else {
      console.log(`‚úÖ [Test] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user ? `ID: ${user.id}` : '–ê–Ω–æ–Ω–∏–º–Ω—ã–π'}`);
    }
  } catch (e) {
    console.warn('‚ö†Ô∏è [Test] –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', e);
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Storage buckets
  console.log('\nüì¶ [Test] –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ Storage buckets');
  try {
    const { data: buckets, error: bucketsError } = await supabase.storage.listBuckets();

    if (bucketsError) {
      console.error('‚ùå [Test] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ buckets:', bucketsError);
      console.error('üí° [Test] –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.error('  - –ù–µ—Ç –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ buckets');
      console.error('  - –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Storage');
      console.error('üí° [Test] –†–µ—à–µ–Ω–∏–µ: –≤—ã–ø–æ–ª–Ω–∏—Ç–µ STORAGE_POLICIES_ANONYMOUS.sql');
      return false;
    }

    console.log(`‚úÖ [Test] –ù–∞–π–¥–µ–Ω–æ buckets: ${buckets.length}`);
    buckets.forEach((bucket: any, index: number) => {
      console.log(`  ${index + 1}. "${bucket.name}" (public: ${bucket.public})`);
    });

    const orderMediaBucket = buckets.find((b: any) => b.name === 'order-media');
    if (!orderMediaBucket) {
      console.error('‚ùå [Test] Bucket "order-media" –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      console.error('üí° [Test] –°–æ–∑–¥–∞–π—Ç–µ bucket: Dashboard ‚Üí Storage ‚Üí New Bucket');
      return false;
    }

    if (!orderMediaBucket.public) {
      console.warn('‚ö†Ô∏è [Test] Bucket "order-media" –Ω–µ –ø—É–±–ª–∏—á–Ω—ã–π!');
      console.warn('üí° [Test] –í–∫–ª—é—á–∏—Ç–µ: Dashboard ‚Üí Storage ‚Üí order-media ‚Üí Settings ‚Üí Public');
    }

    console.log('‚úÖ [Test] Bucket "order-media" –Ω–∞–π–¥–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');

  } catch (e) {
    console.error('‚ùå [Test] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ buckets:', e);
    return false;
  }

  // 4. –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ bucket
  console.log('\nüîç [Test] –®–∞–≥ 4: –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ bucket');
  try {
    const { data: files, error: listError } = await supabase.storage
      .from('order-media')
      .list('', { limit: 1 });

    if (listError) {
      console.error('‚ùå [Test] –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ bucket:', listError);
      console.error('üí° [Test] –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.error('  - –ù–µ—Ç –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è SELECT –Ω–∞ storage.objects');
      console.error('  - Bucket –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      console.error('üí° [Test] –†–µ—à–µ–Ω–∏–µ: –≤—ã–ø–æ–ª–Ω–∏—Ç–µ STORAGE_POLICIES_ANONYMOUS.sql');
      return false;
    }

    console.log(`‚úÖ [Test] –î–æ—Å—Ç—É–ø –∫ bucket —É—Å–ø–µ—à–µ–Ω (—Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ: ${files.length})`);

  } catch (e) {
    console.error('‚ùå [Test] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ bucket:', e);
    return false;
  }

  // 5. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
  console.log('\nüì§ [Test] –®–∞–≥ 5: –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞');
  try {
    const testContent = 'Test file content for MediaService';
    const testFileName = `test/test_${Date.now()}.txt`;

    const { data: uploadData, error: uploadError } = await supabase.storage
      .from('order-media')
      .upload(testFileName, testContent, {
        contentType: 'text/plain',
        upsert: true
      });

    if (uploadError) {
      console.error('‚ùå [Test] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞:', uploadError);
      console.error('üí° [Test] –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.error('  - –ù–µ—Ç –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è INSERT –Ω–∞ storage.objects');
      console.error('  - –ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π');
      console.error('üí° [Test] –†–µ—à–µ–Ω–∏–µ: –≤—ã–ø–æ–ª–Ω–∏—Ç–µ STORAGE_POLICIES_ANONYMOUS.sql');
      return false;
    }

    console.log('‚úÖ [Test] –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', uploadData.path);

    // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
    const { data: urlData } = supabase.storage
      .from('order-media')
      .getPublicUrl(testFileName);

    console.log('‚úÖ [Test] –ü—É–±–ª–∏—á–Ω—ã–π URL:', urlData.publicUrl);

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    await supabase.storage
      .from('order-media')
      .remove([testFileName]);
    console.log('‚úÖ [Test] –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω');

  } catch (e) {
    console.error('‚ùå [Test] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏:', e);
    return false;
  }

  console.log('\nüéâ [Test] –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! MediaService –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
  return true;
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ DevScreen
export const runMediaServiceTest = async () => {
  try {
    const success = await testMediaService();
    return {
      success,
      message: success
        ? '–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! Storage –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ'
        : '–ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π Storage. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.'
    };
  } catch (error) {
    console.error('‚ùå [Test] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    return {
      success: false,
      message: `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
    };
  }
}; 