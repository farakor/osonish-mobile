/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

import { Alert } from 'react-native';
import { orderService } from '../services/orderService';
import { authService } from '../services/authService';
import { supabase } from '../services/supabaseClient';

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –ù–ê–ü–†–Ø–ú–£–Æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–º–∏–Ω—É—è –∫—ç—à orderService)
 */
export async function createTestOrdersSimple(): Promise<boolean> {
  try {
    console.log('üß™ [SIMPLE TEST] –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const authState = authService.getAuthState();
    if (!authState.isAuthenticated || !authState.user) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
      return false;
    }

    console.log('üß™ [SIMPLE TEST] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', authState.user.id);

    const today = new Date().toISOString().split('T')[0];
    const user = authState.user;

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –ù–ê–ü–†–Ø–ú–£–Æ —á–µ—Ä–µ–∑ Supabase (–Ω–µ —á–µ—Ä–µ–∑ orderService)
    const testOrdersData = [
      {
        title: 'üß™ –¢–ï–°–¢: –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ (–±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω)',
        description: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–æ—Ç–º–µ–Ω—ã –≤ 20:00',
        category: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        location: '–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è',
        budget: 100000,
        workers_needed: 1,
        service_date: serviceDateWithTime,
        status: 'new',
        customer_id: user.id,
        photos: [],
        transport_paid: false,
        meal_included: false,
        meal_paid: false,
        applicants_count: 0,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      },
      {
        title: 'üß™ –¢–ï–°–¢: –ó–∞–∫–∞–∑ —Å –æ—Ç–∫–ª–∏–∫–æ–º (–±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω)',
        description: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–æ—Ç–º–µ–Ω—ã –≤ 20:00',
        category: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        location: '–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è',
        budget: 150000,
        workers_needed: 1,
        service_date: serviceDateWithTime,
        status: 'response_received',
        customer_id: user.id,
        photos: [],
        transport_paid: false,
        meal_included: false,
        meal_paid: false,
        applicants_count: 0,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      },
      {
        title: 'üß™ –¢–ï–°–¢: –ó–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç–µ (–±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω)',
        description: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤ 20:00',
        category: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        location: '–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è',
        budget: 200000,
        workers_needed: 1,
        service_date: serviceDateWithTime,
        status: 'in_progress',
        customer_id: user.id,
        photos: [],
        transport_paid: false,
        meal_included: false,
        meal_paid: false,
        applicants_count: 0,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      },
    ];

    let createdCount = 0;
    for (const orderData of testOrdersData) {
      try {
        console.log('üß™ [SIMPLE TEST] –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –ù–ê–ü–†–Ø–ú–£–Æ –≤ –ë–î:', orderData.title);

        // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Supabase
        const { data, error } = await supabase
          .from('orders')
          .insert(orderData)
          .select('id, title, status, service_date')
          .single();

        if (error) {
          console.error('üß™ [SIMPLE TEST] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –ë–î:', error);
          Alert.alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑: ${orderData.title}\n\n–û—à–∏–±–∫–∞: ${error.message}`);
        } else {
          console.log('üß™ [SIMPLE TEST] –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –ù–ê–ü–†–Ø–ú–£–Æ –≤ –ë–î:', data.id, '—Å–æ —Å—Ç–∞—Ç—É—Å–æ–º:', data.status);
          createdCount++;
        }
      } catch (error) {
        console.error('üß™ [SIMPLE TEST] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error);
      }
    }

    if (createdCount > 0) {
      Alert.alert('–£—Å–ø–µ—Ö', `–°–æ–∑–¥–∞–Ω–æ ${createdCount} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤`);
      return true;
    } else {
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞');
      return false;
    }

  } catch (error) {
    console.error('üß™ [SIMPLE TEST] –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
    Alert.alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã: ${error}`);
    return false;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç "—Ä–µ–∞–ª—å–Ω—ã–µ" –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ê–ü–†–Ø–ú–£–Æ –≤ –ë–î (–±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –¢–ï–°–¢)
 * –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—ã—á–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function createRealUserOrdersForTesting(): Promise<boolean> {
  try {
    console.log('üß™ [REAL TEST] –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const authState = authService.getAuthState();
    if (!authState.isAuthenticated || !authState.user) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
      return false;
    }

    console.log('üß™ [REAL TEST] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', authState.user.id);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞—Ç—É —Å –≤—Ä–µ–º–µ–Ω–µ–º –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const today = new Date();
    today.setHours(4, 0, 0, 0); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è 04:00 –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö
    const serviceDateWithTime = today.toISOString(); // –§–æ—Ä–º–∞—Ç: 2025-09-30T04:00:00.000Z

    console.log(`üß™ [REAL TEST] –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã —Å –¥–∞—Ç–æ–π: ${serviceDateWithTime}`);

    const user = authState.user;

    // –°–æ–∑–¥–∞–µ–º "—Ä–µ–∞–ª—å–Ω—ã–µ" –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ê–ü–†–Ø–ú–£–Æ —á–µ—Ä–µ–∑ Supabase
    const realOrdersData = [
      {
        title: '–†–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã',
        description: '–ù—É–∂–Ω–æ –æ—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–Ω–Ω—É—é –∫–æ–º–Ω–∞—Ç—É',
        category: '–†–µ–º–æ–Ω—Ç',
        location: '–¢–∞—à–∫–µ–Ω—Ç, –ú–∏—Ä–∑–æ-–£–ª—É–≥–±–µ–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω',
        budget: 500000,
        workers_needed: 2,
        service_date: serviceDateWithTime,
        status: 'new',
        customer_id: user.id,
        photos: [],
        transport_paid: false,
        meal_included: false,
        meal_paid: false,
        applicants_count: 0,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      },
      {
        title: '–£–±–æ—Ä–∫–∞ –¥–æ–º–∞',
        description: '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ —Ç—Ä–µ—Ö–∫–æ–º–Ω–∞—Ç–Ω–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã',
        category: '–£–±–æ—Ä–∫–∞',
        location: '–¢–∞—à–∫–µ–Ω—Ç, –Æ–Ω—É—Å–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω',
        budget: 200000,
        workers_needed: 1,
        service_date: serviceDateWithTime,
        status: 'response_received',
        customer_id: user.id,
        photos: [],
        transport_paid: true,
        meal_included: false,
        meal_paid: false,
        applicants_count: 3,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      },
      {
        title: '–î–æ—Å—Ç–∞–≤–∫–∞ –º–µ–±–µ–ª–∏',
        description: '–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –¥–∏–≤–∞–Ω–∞ –∏ —à–∫–∞—Ñ–∞ –Ω–∞ –Ω–æ–≤—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É',
        category: '–î–æ—Å—Ç–∞–≤–∫–∞',
        location: '–¢–∞—à–∫–µ–Ω—Ç, –°–µ—Ä–≥–µ–ª–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω',
        budget: 150000,
        workers_needed: 2,
        service_date: serviceDateWithTime,
        status: 'in_progress',
        customer_id: user.id,
        photos: [],
        transport_paid: false,
        meal_included: true,
        meal_paid: false,
        applicants_count: 1,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      },
    ];

    let createdCount = 0;
    for (const orderData of realOrdersData) {
      try {
        console.log('üß™ [REAL TEST] –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ –ù–ê–ü–†–Ø–ú–£–Æ –≤ –ë–î:', orderData.title);

        // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Supabase
        const { data, error } = await supabase
          .from('orders')
          .insert(orderData)
          .select('id, title, status, service_date')
          .single();

        if (error) {
          console.error('üß™ [REAL TEST] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –≤ –ë–î:', error);
          Alert.alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑: ${orderData.title}\n\n–û—à–∏–±–∫–∞: ${error.message}`);
        } else {
          console.log('üß™ [REAL TEST] –†–µ–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –ù–ê–ü–†–Ø–ú–£–Æ –≤ –ë–î:', data.id, '—Å–æ —Å—Ç–∞—Ç—É—Å–æ–º:', data.status);
          createdCount++;
        }
      } catch (error) {
        console.error('üß™ [REAL TEST] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞:', error);
      }
    }

    if (createdCount > 0) {
      Alert.alert('–£—Å–ø–µ—Ö', `–°–æ–∑–¥–∞–Ω–æ ${createdCount} —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);
      return true;
    } else {
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞');
      return false;
    }

  } catch (error) {
    console.error('üß™ [REAL TEST] –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
    Alert.alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã: ${error}`);
    return false;
  }
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–ï–ó –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
 * @param allOrders - –µ—Å–ª–∏ true, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –í–°–ï –∑–∞–∫–∞–∑—ã, –µ—Å–ª–∏ false - —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã–µ
 */
export async function runTestAutoUpdate(allOrders: boolean = false): Promise<boolean> {
  try {
    if (allOrders) {
      console.log('üß™ [SIMPLE TEST] –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –í–°–ï–• –∑–∞–∫–∞–∑–æ–≤ –ë–ï–ó –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏...');
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –í–°–ï–• –∑–∞–∫–∞–∑–æ–≤
      await orderService.autoCompleteOrdersForTesting();
      Alert.alert('–£—Å–ø–µ—Ö', '–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –í–°–ï–• –∑–∞–∫–∞–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏.');
    } else {
      console.log('üß™ [SIMPLE TEST] –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¢–û–õ–¨–ö–û —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –ë–ï–ó –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏...');
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤
      await orderService.autoCompleteTestOrdersOnly();
      Alert.alert('–£—Å–ø–µ—Ö', '–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏.');
    }

    return true;

  } catch (error) {
    console.error('üß™ [SIMPLE TEST] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
    Alert.alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${error}`);
    return false;
  }
}

/**
 * –û—á–∏—â–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã
 */
export async function cleanupTestOrdersSimple(): Promise<boolean> {
  try {
    console.log('üß™ [SIMPLE TEST] –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã...');

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const orders = await orderService.getUserNewOrders();
    const testOrders = orders.filter(order => order.title.includes('üß™ –¢–ï–°–¢:'));

    console.log('üß™ [SIMPLE TEST] –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', testOrders.length);

    let deletedCount = 0;
    for (const order of testOrders) {
      try {
        const success = await orderService.deleteOrder(order.id);
        if (success) {
          deletedCount++;
          console.log('üß™ [SIMPLE TEST] –ó–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω:', order.id);
        }
      } catch (error) {
        console.error('üß™ [SIMPLE TEST] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:', order.id, error);
      }
    }

    Alert.alert('–£—Å–ø–µ—Ö', `–£–¥–∞–ª–µ–Ω–æ ${deletedCount} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤`);
    return true;

  } catch (error) {
    console.error('üß™ [SIMPLE TEST] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
    Alert.alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã: ${error}`);
    return false;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
export async function checkTestResults(): Promise<void> {
  try {
    console.log('üß™ [SIMPLE TEST] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const allOrders = await orderService.getCustomerOrders();
    const testOrders = allOrders.filter(order => order.title.includes('üß™ –¢–ï–°–¢:'));

    console.log('üß™ [SIMPLE TEST] –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤:', testOrders.length);

    let completedCount = 0;
    let cancelledCount = 0;

    testOrders.forEach(order => {
      console.log(`üß™ [SIMPLE TEST] –ó–∞–∫–∞–∑ ${order.id}: ${order.status}`);
      if (order.status === 'completed') completedCount++;
      if (order.status === 'cancelled') cancelledCount++;
    });

    Alert.alert(
      '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
      `–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤: ${testOrders.length}\n` +
      `–ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${completedCount}\n` +
      `–û—Ç–º–µ–Ω–µ–Ω–æ: ${cancelledCount}\n\n` +
      `–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–∞—Ö –∫–æ–Ω—Å–æ–ª–∏`
    );

  } catch (error) {
    console.error('üß™ [SIMPLE TEST] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', error);
    Alert.alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: ${error}`);
  }
}
