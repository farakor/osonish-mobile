/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SMS —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è Oson Ish
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Eskiz.uz –∏ Twilio
 */

import { EskizConfig } from '../services/eskizSMSService';
import { SMSServiceConfig } from '../services/smsService';

// –¢–∏–ø SMS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
export type SMSProvider = 'eskiz' | 'twilio';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π
interface SMSEnvironmentConfig {
  provider: SMSProvider;
  eskiz?: EskizConfig;
  twilio?: SMSServiceConfig;
  senderName?: string; // –ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –¥–ª—è SMS
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å fallback –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
const getEnvVar = (key: string, defaultValue: string = ''): string => {
  // –í React Native –∏—Å–ø–æ–ª—å–∑—É–µ–º process.env –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  // –î–ª—è Expo –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º EXPO_PUBLIC_ –∏–ª–∏ –ø—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ
  if (key === 'FORCE_PRODUCTION_SMS') {
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
    return process.env.FORCE_PRODUCTION_SMS || process.env.EXPO_PUBLIC_FORCE_PRODUCTION_SMS || defaultValue;
  }
  return process.env[key] || defaultValue;
};

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
const developmentConfig: SMSEnvironmentConfig = {
  provider: 'eskiz', // –ò—Å–ø–æ–ª—å–∑—É–µ–º Eskiz –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  eskiz: {
    email: getEnvVar('ESKIZ_EMAIL', 'your_eskiz_email@example.com'),
    password: getEnvVar('ESKIZ_PASSWORD', 'your_eskiz_password'),
    baseUrl: getEnvVar('ESKIZ_BASE_URL', 'https://notify.eskiz.uz/api'),
  },
  twilio: {
    accountSid: getEnvVar('TWILIO_ACCOUNT_SID', 'your_twilio_account_sid'),
    authToken: getEnvVar('TWILIO_AUTH_TOKEN', 'your_twilio_auth_token'),
    fromNumber: getEnvVar('TWILIO_FROM_NUMBER', '+1234567890'),
  },
  senderName: getEnvVar('SMS_SENDER_NAME', 'OsonIsh'),
};

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
const productionConfig: SMSEnvironmentConfig = {
  provider: 'eskiz',
  eskiz: {
    email: getEnvVar('ESKIZ_EMAIL'),
    password: getEnvVar('ESKIZ_PASSWORD'),
    baseUrl: getEnvVar('ESKIZ_BASE_URL', 'https://notify.eskiz.uz/api'),
  },
  twilio: {
    accountSid: getEnvVar('TWILIO_ACCOUNT_SID'),
    authToken: getEnvVar('TWILIO_AUTH_TOKEN'),
    fromNumber: getEnvVar('TWILIO_FROM_NUMBER'),
  },
  senderName: getEnvVar('SMS_SENDER_NAME', 'OsonIsh'),
};

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const testConfig: SMSEnvironmentConfig = {
  provider: 'eskiz',
  eskiz: {
    email: 'test@example.com',
    password: 'test_password',
    baseUrl: 'https://notify.eskiz.uz/api',
  },
  twilio: {
    accountSid: 'test_account_sid',
    authToken: 'test_auth_token',
    fromNumber: '+1234567890',
  },
  senderName: 'TestOsonIsh',
};

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const getEnvironment = (): 'development' | 'production' | 'test' => {
  if (__DEV__) {
    return 'development';
  }

  if (process.env.NODE_ENV === 'test') {
    return 'test';
  }

  return 'production';
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const getConfigForEnvironment = (): SMSEnvironmentConfig => {
  const env = getEnvironment();

  switch (env) {
    case 'development':
      return developmentConfig;
    case 'test':
      return testConfig;
    case 'production':
    default:
      return productionConfig;
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
export const smsConfig = getConfigForEnvironment();

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
export const validateSMSConfig = (): { isValid: boolean; errors: string[] } => {
  const errors: string[] = [];
  const config = smsConfig;

  if (!config.provider) {
    errors.push('SMS provider –Ω–µ —É–∫–∞–∑–∞–Ω');
  }

  if (config.provider === 'eskiz' && config.eskiz) {
    if (!config.eskiz.email) {
      errors.push('Eskiz email –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    if (!config.eskiz.password) {
      errors.push('Eskiz password –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    if (!config.eskiz.baseUrl) {
      errors.push('Eskiz baseUrl –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
  }

  if (config.provider === 'twilio' && config.twilio) {
    if (!config.twilio.accountSid) {
      errors.push('Twilio Account SID –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    if (!config.twilio.authToken) {
      errors.push('Twilio Auth Token –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    if (!config.twilio.fromNumber) {
      errors.push('Twilio From Number –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
  }

  return {
    isValid: errors.length === 0,
    errors
  };
};

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
if (__DEV__) {
  console.log('[SMSConfig] üîß –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SMS:', {
    environment: getEnvironment(),
    provider: smsConfig.provider,
    senderName: smsConfig.senderName,
    eskizConfigured: !!smsConfig.eskiz?.email,
    twilioConfigured: !!smsConfig.twilio?.accountSid,
  });

  const validation = validateSMSConfig();
  if (!validation.isValid) {
    console.warn('[SMSConfig] ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π SMS:', validation.errors);
  } else {
    console.log('[SMSConfig] ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SMS –≤–∞–ª–∏–¥–Ω–∞');
  }
}
