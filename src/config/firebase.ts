import { Platform } from 'react-native';

// Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const firebaseConfig = {
  apiKey: process.env.EXPO_PUBLIC_FIREBASE_API_KEY || 'AIzaSyAfT2LkFCGZFf-Rx_9Of49ejwlIPpnwsKM',
  authDomain: process.env.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN || 'osonish-mobile.firebaseapp.com',
  projectId: process.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID || 'osonish-mobile',
  storageBucket: process.env.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET || 'osonish-mobile.firebasestorage.app',
  messagingSenderId: process.env.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '416617595886',
  appId: process.env.EXPO_PUBLIC_FIREBASE_APP_ID || '1:416617595886:android:69297fd1ce7a83f30404ff',
};

console.log('üî• Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:', {
  projectId: firebaseConfig.projectId,
  hasApiKey: !!firebaseConfig.apiKey,
  platform: Platform.OS,
  isDev: __DEV__
});

// –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase (–±–µ–∑ @react-native-firebase –≤ managed workflow)
let firebaseApp = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase –¥–ª—è Expo managed workflow
const initializeFirebaseApp = async () => {
  try {
    console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase –¥–ª—è Expo managed workflow...');

    // –í Expo managed workflow –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Firebase
    const { initializeApp, getApps } = await import('firebase/app');

    if (getApps().length === 0) {
      firebaseApp = initializeApp(firebaseConfig);
      console.log('üî• Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } else {
      firebaseApp = getApps()[0];
      console.log('üî• Firebase —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase:', error);
    return false;
  }
};

export { firebaseApp, firebaseConfig, initializeFirebaseApp };

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è FCM —Ç–æ–∫–µ–Ω–∞ (–¥–ª—è Android production)
export const getFCMToken = async (): Promise<string | null> => {
  try {
    console.log('üî• –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å FCM —Ç–æ–∫–µ–Ω...');
    console.log('üî• Platform:', Platform.OS);
    console.log('üî• __DEV__:', __DEV__);

    if (Platform.OS !== 'android') {
      console.log('üî• FCM –ø—Ä–æ–ø—É—â–µ–Ω: –Ω–µ Android –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞');
      return null;
    }

    // –í Expo managed workflow @react-native-firebase –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ Expo Notifications —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º projectId
    console.log('üî• –ò—Å–ø–æ–ª—å–∑—É–µ–º Expo Notifications –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞...');

    let Notifications;
    try {
      Notifications = require('expo-notifications');
    } catch (error) {
      console.error('‚ùå expo-notifications –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
      return null;
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º EAS projectId –≤–º–µ—Å—Ç–æ Firebase projectId
    const Constants = require('expo-constants');

    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è projectId
    let easProjectId = null;

    // –°–ø–æ—Å–æ–± 1: –∏–∑ expoConfig
    if (Constants.expoConfig?.extra?.eas?.projectId) {
      easProjectId = Constants.expoConfig.extra.eas.projectId;
      console.log('üî• ProjectId –Ω–∞–π–¥–µ–Ω –≤ expoConfig:', easProjectId);
    }
    // –°–ø–æ—Å–æ–± 2: –∏–∑ easConfig
    else if (Constants.easConfig?.projectId) {
      easProjectId = Constants.easConfig.projectId;
      console.log('üî• ProjectId –Ω–∞–π–¥–µ–Ω –≤ easConfig:', easProjectId);
    }
    // –°–ø–æ—Å–æ–± 3: –∏–∑ manifest
    else if (Constants.manifest?.extra?.eas?.projectId) {
      easProjectId = Constants.manifest.extra.eas.projectId;
      console.log('üî• ProjectId –Ω–∞–π–¥–µ–Ω –≤ manifest:', easProjectId);
    }
    // –°–ø–æ—Å–æ–± 4: –∏–∑ manifest2
    else if (Constants.manifest2?.extra?.eas?.projectId) {
      easProjectId = Constants.manifest2.extra.eas.projectId;
      console.log('üî• ProjectId –Ω–∞–π–¥–µ–Ω –≤ manifest2:', easProjectId);
    }
    // –°–ø–æ—Å–æ–± 5: —Ö–∞—Ä–¥–∫–æ–¥ –∫–∞–∫ fallback (–∏–∑ app.json)
    else {
      easProjectId = 'd25e6650-1e06-4ebb-8988-0085861affbf';
      console.log('üî• –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö–∞—Ä–¥–∫–æ–¥ projectId:', easProjectId);
    }

    if (!easProjectId) {
      console.error('‚ùå EAS projectId –Ω–µ –Ω–∞–π–¥–µ–Ω');
      console.log('üí° Constants.expoConfig:', JSON.stringify(Constants.expoConfig?.extra, null, 2));
      console.log('üí° Constants.easConfig:', JSON.stringify(Constants.easConfig, null, 2));
      console.log('üí° Constants.manifest:', JSON.stringify(Constants.manifest?.extra, null, 2));
      return null;
    }

    console.log('üî• –ò—Å–ø–æ–ª—å–∑—É–µ–º EAS projectId:', easProjectId);

    try {
      const tokenData = await Notifications.getExpoPushTokenAsync({
        projectId: easProjectId,
      });

      if (tokenData && tokenData.data) {
        console.log('üéØ Push —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ Expo:', tokenData.data.substring(0, 20) + '...');

        // –í production Android —Å–±–æ—Ä–∫–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –±—É–¥–µ—Ç FCM —Ç–æ–∫–µ–Ω–æ–º
        if (!__DEV__) {
          console.log('üî• –í production —ç—Ç–æ –±—É–¥–µ—Ç FCM —Ç–æ–∫–µ–Ω');
        }

        return tokenData.data;
      } else {
        console.log('‚ö†Ô∏è Push —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ Expo');
        return null;
      }
    } catch (expoError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Expo push —Ç–æ–∫–µ–Ω–∞ —Å EAS projectId:', expoError);

      // Fallback: –ø—Ä–æ–±—É–µ–º —Å Firebase projectId (–¥–ª—è development)
      if (__DEV__) {
        console.log('üîÑ Fallback: –ø—Ä–æ–±—É–µ–º —Å Firebase projectId –¥–ª—è development...');

        try {
          const fallbackTokenData = await Notifications.getExpoPushTokenAsync({
            projectId: firebaseConfig.projectId,
          });

          if (fallbackTokenData && fallbackTokenData.data) {
            console.log('üéØ Push —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ Firebase projectId fallback:', fallbackTokenData.data.substring(0, 20) + '...');
            return fallbackTokenData.data;
          }
        } catch (fallbackError) {
          console.error('‚ùå Fallback —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', fallbackError);
        }
      }

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
      if (expoError.message?.includes('Invalid uuid')) {
        console.error('üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å projectId. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ EAS –≤ app.json');
      }

      return null;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è FCM —Ç–æ–∫–µ–Ω–∞:', error);
    return null;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
export const initializeFirebase = async () => {
  try {
    console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase –¥–ª—è push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');

    const initialized = await initializeFirebaseApp();
    if (!initialized) {
      console.error('‚ùå Firebase app –Ω–µ —Å–æ–∑–¥–∞–Ω');
      return false;
    }

    console.log('‚úÖ Firebase –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase:', error);
    return false;
  }
};
