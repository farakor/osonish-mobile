import 'react-native-url-polyfill/auto';
import { createClient } from '@supabase/supabase-js';
import Constants from 'expo-constants';

// üîß –ù–ê–°–¢–†–û–ô–ö–ê SUPABASE –° –ü–û–î–î–ï–†–ñ–ö–û–ô –†–ê–ó–ù–´–• –°–†–ï–î:
// 1. –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ https://supabase.com (development –∏ production)
// 2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env.development –∏ .env.production
// 3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ npm run start:dev –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, npm run start:prod –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞

// –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: process.env (–∏–∑ EAS –±–∏–ª–¥–∞) ‚Üí Constants.expoConfig.extra (–∏–∑ app.json) ‚Üí .env —Ñ–∞–π–ª—ã
const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL || Constants.expoConfig?.extra?.supabaseUrl;
const supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY || Constants.expoConfig?.extra?.supabaseAnonKey;

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
const isDevelopment = __DEV__ || process.env.NODE_ENV === 'development';
const environment = isDevelopment ? 'DEVELOPMENT' : 'PRODUCTION';

// –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Å—Ä–µ–¥–µ
console.log(`üåç –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ: ${environment}`);
console.log(`üîó Supabase URL: ${supabaseUrl}`);
console.log(`üì± –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: ${isDevelopment ? '–î–ê' : '–ù–ï–¢'}`);

// –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (isDevelopment && supabaseUrl?.includes('qmbavgwkxtqudchuahdv')) {
  console.warn('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ü–†–û–î–ê–ö–®–ï–ù –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!');
  console.warn('‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç Supabase –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
if (!supabaseUrl || supabaseUrl.includes('YOUR_SUPABASE_URL')) {
  console.error('‚ùå Supabase URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL.');
}
if (!supabaseAnonKey || supabaseAnonKey.includes('YOUR_SUPABASE_ANON_KEY')) {
  console.error('‚ùå Supabase ANON KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á.');
}

// –°–æ–∑–¥–∞–µ–º Supabase –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
let supabaseInstance: any = null;

try {
  if (supabaseUrl && supabaseAnonKey && !supabaseUrl.includes('YOUR_SUPABASE_URL')) {
    supabaseInstance = createClient(supabaseUrl, supabaseAnonKey, {
      auth: {
        autoRefreshToken: true,
        persistSession: true,
        detectSessionInUrl: false,
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è persistence –≤ React Native
        storage: undefined, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        storageKey: 'sb-auth-token', // –ö–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
        flowType: 'pkce', // –ò—Å–ø–æ–ª—å–∑—É–µ–º PKCE flow –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
      },
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è React Native
      realtime: {
        params: {
          eventsPerSecond: 10,
        },
      },
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
      global: {
        headers: {
          'X-Client-Info': 'osonish-mobile@1.0.0',
        },
      },
    });
    console.log('‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π');
  } else {
    console.warn('‚ö†Ô∏è Supabase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback —Ä–µ–∂–∏–º');
  }
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞:', error);
}

export const supabase = supabaseInstance;

// –¢–∏–ø—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export interface Database {
  public: {
    Tables: {
      orders: {
        Row: {
          id: string;
          title: string;
          description: string;
          category: string;
          location: string;
          budget: number;
          workers_needed: number;
          service_date: string;
          photos: string[];
          customer_id: string;
          status: 'new' | 'in_progress' | 'completed' | 'cancelled';
          applicants_count: number;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          title: string;
          description: string;
          category: string;
          location: string;
          budget: number;
          workers_needed: number;
          service_date: string;
          photos?: string[];
          customer_id: string;
          status?: 'new' | 'in_progress' | 'completed' | 'cancelled';
          applicants_count?: number;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          title?: string;
          description?: string;
          category?: string;
          location?: string;
          budget?: number;
          workers_needed?: number;
          service_date?: string;
          photos?: string[];
          customer_id?: string;
          status?: 'new' | 'in_progress' | 'completed' | 'cancelled';
          applicants_count?: number;
          created_at?: string;
          updated_at?: string;
        };
      };
      applicants: {
        Row: {
          id: string;
          order_id: string;
          worker_id: string;
          worker_name: string;
          worker_phone: string;
          rating?: number;
          completed_jobs?: number;
          message?: string;
          proposed_price?: number;
          applied_at: string;
          status: 'pending' | 'accepted' | 'rejected' | 'cancelled';
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          order_id: string;
          worker_id: string;
          worker_name: string;
          worker_phone: string;
          rating?: number;
          completed_jobs?: number;
          message?: string;
          proposed_price?: number;
          applied_at?: string;
          status?: 'pending' | 'accepted' | 'rejected' | 'cancelled';
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          order_id?: string;
          worker_id?: string;
          worker_name?: string;
          worker_phone?: string;
          rating?: number;
          completed_jobs?: number;
          message?: string;
          proposed_price?: number;
          applied_at?: string;
          status?: 'pending' | 'accepted' | 'rejected' | 'cancelled';
          created_at?: string;
          updated_at?: string;
        };
      };
      users: {
        Row: {
          id: string;
          phone: string;
          first_name: string;
          last_name: string;
          middle_name?: string;
          birth_date: string;
          role: 'customer' | 'worker';
          profile_image?: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          phone: string;
          first_name: string;
          last_name: string;
          middle_name?: string;
          birth_date: string;
          role: 'customer' | 'worker';
          profile_image?: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          phone?: string;
          first_name?: string;
          last_name?: string;
          middle_name?: string;
          birth_date?: string;
          role?: 'customer' | 'worker';
          profile_image?: string;
          created_at?: string;
          updated_at?: string;
        };
      };
      notifications: {
        Row: {
          id: string;
          user_id: string;
          title: string;
          message: string;
          type: 'new_order' | 'new_application' | 'order_update' | 'order_completed';
          is_read: boolean;
          data?: any;
          created_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          title: string;
          message: string;
          type: 'new_order' | 'new_application' | 'order_update' | 'order_completed';
          is_read?: boolean;
          data?: any;
          created_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          title?: string;
          message?: string;
          type?: 'new_order' | 'new_application' | 'order_update' | 'order_completed';
          is_read?: boolean;
          data?: any;
          created_at?: string;
        };
      };
      scheduled_reminders: {
        Row: {
          id: string;
          worker_id: string;
          order_id: string;
          reminder_date: string;
          reminder_type: string;
          is_sent: boolean;
          sent_at?: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          worker_id: string;
          order_id: string;
          reminder_date: string;
          reminder_type?: string;
          is_sent?: boolean;
          sent_at?: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          worker_id?: string;
          order_id?: string;
          reminder_date?: string;
          reminder_type?: string;
          is_sent?: boolean;
          sent_at?: string;
          created_at?: string;
          updated_at?: string;
        };
      };
    };
  };
}