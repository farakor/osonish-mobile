import { supabase } from './supabaseClient';
import * as FileSystem from 'expo-file-system';
import { decode } from 'base64-arraybuffer';
import AsyncStorage from '@react-native-async-storage/async-storage';
import * as ImageManipulator from 'expo-image-manipulator';

export interface MediaUploadResult {
  success: boolean;
  urls?: string[];
  error?: string;
}

export interface MediaOptimizationSettings {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  maxImageWidth: number;
  maxImageHeight: number;
  imageQuality: number; // 0.0 - 1.0

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–∏–¥–µ–æ
  maxVideoSize: number; // –≤ –±–∞–π—Ç–∞—Ö

  // –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  enableOptimization: boolean;
}

export class MediaService {
  private static instance: MediaService;
  private readonly BUCKET_NAME = 'order-media';
  private readonly ENABLE_STORAGE = true; // –ü–æ—Å—Ç–∞–≤—å—Ç–µ false –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Storage

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–µ–¥–∏–∞
  private readonly optimizationSettings: MediaOptimizationSettings = {
    maxImageWidth: 1920,      // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    maxImageHeight: 1080,     // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    imageQuality: 0.8,        // –ö–∞—á–µ—Å—Ç–≤–æ —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (80%)
    maxVideoSize: 20 * 1024 * 1024, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ 20 –ú–ë
    enableOptimization: true  // –í–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
  };

  static getInstance(): MediaService {
    if (!MediaService.instance) {
      MediaService.instance = new MediaService();
    }
    return MediaService.instance;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  getOptimizationSettings(): MediaOptimizationSettings {
    return { ...this.optimizationSettings };
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  updateOptimizationSettings(newSettings: Partial<MediaOptimizationSettings>): void {
    Object.assign(this.optimizationSettings, newSettings);
    console.log('[MediaService] ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', this.optimizationSettings);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ bucket –¥–ª—è –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
   */
  private async ensureBucketExists(): Promise<boolean> {
    try {
      console.log(`[MediaService] üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º bucket '${this.BUCKET_NAME}'...`);

      // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ bucket (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ)
      console.log('[MediaService] üéØ –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ bucket...');
      try {
        const { data: testData, error: testError } = await supabase.storage
          .from(this.BUCKET_NAME)
          .list('', { limit: 1 });

        if (testError) {
          console.error('[MediaService] ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ bucket:', testError);

          // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
          if (testError.message?.includes('JWT') || testError.message?.includes('session missing')) {
            console.error('[MediaService] üîë –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π - –Ω—É–∂–Ω—ã –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏');
            console.error('[MediaService] üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL: STORAGE_POLICIES_ANONYMOUS.sql');
          } else if (testError.message?.includes('not found')) {
            console.error('[MediaService] üì¶ Bucket –Ω–µ –Ω–∞–π–¥–µ–Ω - —Å–æ–∑–¥–∞–π—Ç–µ –≤ Dashboard');
            console.error('[MediaService] üí° Storage ‚Üí New Bucket ‚Üí name: order-media ‚Üí Public: ‚úÖ');
          } else if (testError.message?.includes('policy')) {
            console.error('[MediaService] üîí –ü—Ä–æ–±–ª–µ–º–∞ —Å RLS –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏');
            console.error('[MediaService] üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ: CREATE POLICY "Public buckets are viewable by everyone" ON storage.buckets FOR SELECT USING (true);');
          }

          return false;
        } else {
          console.log('[MediaService] ‚úÖ Bucket –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
          return true;
        }
      } catch (directError) {
        console.error('[MediaService] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞:', directError);

        // –ü–æ–ø—Ä–æ–±—É–µ–º listBuckets –∫–∞–∫ fallback, –Ω–æ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        console.log('[MediaService] üîÑ Fallback: –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ listBuckets...');
        try {
          const { data: buckets, error: listError } = await supabase.storage.listBuckets();

          if (listError) {
            console.error('[MediaService] ‚ùå listBuckets —Ç–∞–∫–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', listError);
            return false;
          }

          if (!buckets || !Array.isArray(buckets)) {
            console.error('[MediaService] ‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç listBuckets');
            return false;
          }

          console.log(`[MediaService] üìã –ù–∞–π–¥–µ–Ω–æ buckets: ${buckets.length}`);

          const bucketExists = buckets.some((bucket: { name: string }) => bucket?.name === this.BUCKET_NAME);

          if (bucketExists) {
            console.log(`[MediaService] ‚úÖ Bucket '${this.BUCKET_NAME}' –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ!`);
            return true;
          } else {
            console.error(`[MediaService] ‚ùå Bucket '${this.BUCKET_NAME}' –ù–ï –ù–ê–ô–î–ï–ù –≤ —Å–ø–∏—Å–∫–µ!`);
            console.error('[MediaService] üí° –°–æ–∑–¥–∞–π—Ç–µ bucket –≤ Supabase Dashboard');
            return false;
          }
        } catch (listBucketsError) {
          console.error('[MediaService] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ listBuckets:', listBucketsError);
          return false;
        }
      }
    } catch (error) {
      console.error('[MediaService] ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ bucket:', error);
      console.error('[MediaService] üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –≤ supabaseClient.ts');
      return false;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é Supabase
   */
  private async ensureAuthentication(): Promise<void> {
    try {
      console.log('[MediaService] üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
      let user = null;
      let authError = null;

      try {
        const result = await supabase.auth.getUser();
        user = result.data?.user;
        authError = result.error;
      } catch (getUserError) {
        console.warn('[MediaService] ‚ö†Ô∏è –û—à–∏–±–∫–∞ getUser():', getUserError);
        authError = getUserError;
      }

      if (authError || !user) {
        console.warn('[MediaService] ‚ö†Ô∏è –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:', authError?.message || 'Auth session missing!');

        // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –∏–∑ AsyncStorage
        console.log('[MediaService] üîÑ –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Supabase —Å–µ—Å—Å–∏—é –∏–∑ AsyncStorage...');

        try {
          const storedSession = await AsyncStorage.getItem('@osonish_supabase_session');
          console.log('[MediaService] üì± –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é:', storedSession ? '–Ω–∞–π–¥–µ–Ω–∞' : '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞');

          if (storedSession) {
            try {
              console.log('[MediaService] üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Supabase —Å–µ—Å—Å–∏—é...');
              const session = JSON.parse(storedSession);

              // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
              if (!session || !session.access_token) {
                console.warn('[MediaService] ‚ùå –°–µ—Å—Å–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞, —É–¥–∞–ª—è–µ–º...');
                await AsyncStorage.removeItem('@osonish_supabase_session');
                console.log('[MediaService] üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É');
                return;
              }

              console.log('[MediaService] üìã –°–µ—Å—Å–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç:', {
                hasAccessToken: !!session.access_token,
                hasRefreshToken: !!session.refresh_token,
                expiresAt: session.expires_at
              });

              const { data, error: setSessionError } = await supabase.auth.setSession(session);

              if (setSessionError) {
                console.error('[MediaService] ‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Å—Å–∏–∏:', setSessionError.message);
                // –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
                await AsyncStorage.removeItem('@osonish_supabase_session');
                console.log('[MediaService] üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É (—Ç—Ä–µ–±—É—é—Ç—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ Storage)');
                return;
              }

              // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Å—Å–∏–∏
              console.log('[MediaService] ‚úÖ –°–µ—Å—Å–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
              try {
                const { data: { user: restoredUser }, error: restoreError } = await supabase.auth.getUser();

                if (restoreError || !restoredUser) {
                  console.warn('[MediaService] ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏');
                  console.warn('[MediaService] –û—à–∏–±–∫–∞:', restoreError?.message);
                  console.log('[MediaService] üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É (—Ç—Ä–µ–±—É—é—Ç—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ Storage)');
                } else {
                  console.log('[MediaService] ‚úÖ Supabase —Å–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!');
                  console.log(`[MediaService] üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${restoredUser.id}`);
                  console.log(`[MediaService] üìß Email: ${restoredUser.email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
                }
              } catch (verifyError) {
                console.warn('[MediaService] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏:', verifyError);
                console.log('[MediaService] üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É');
              }
            } catch (parseError) {
              console.error('[MediaService] ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–µ—Å—Å–∏–∏:', parseError);
              // –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
              try {
                await AsyncStorage.removeItem('@osonish_supabase_session');
              } catch (removeError) {
                console.error('[MediaService] ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏:', removeError);
              }
              console.log('[MediaService] üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É');
            }
          } else {
            console.log('[MediaService] üí° –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É');
          }
        } catch (sessionError) {
          console.warn('[MediaService] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', sessionError);
          console.log('[MediaService] üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É (—Ç—Ä–µ–±—É—é—Ç—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ Storage)');
        }
      } else {
        console.log(`[MediaService] ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${user.id}`);
        console.log(`[MediaService] üìß Email: ${user.email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      }
    } catch (error) {
      console.warn('[MediaService] ‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
      console.log('[MediaService] üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É (—Ç—Ä–µ–±—É—é—Ç—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ Storage)');
    }
  }

  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
   */
  private calculateOptimalSize(
    originalWidth: number,
    originalHeight: number,
    maxWidth: number,
    maxHeight: number
  ): { width: number; height: number; needsResize: boolean } {

    // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤, –Ω–µ –∏–∑–º–µ–Ω—è–µ–º
    if (originalWidth <= maxWidth && originalHeight <= maxHeight) {
      return {
        width: originalWidth,
        height: originalHeight,
        needsResize: false
      };
    }

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    const widthRatio = maxWidth / originalWidth;
    const heightRatio = maxHeight / originalHeight;

    // –í—ã–±–∏—Ä–∞–µ–º –º–µ–Ω—å—à–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç, —á—Ç–æ–±—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–º–µ—Å—Ç–∏–ª–æ—Å—å –≤ —Ä–∞–º–∫–∏
    const scaleFactor = Math.min(widthRatio, heightRatio);

    const newWidth = Math.round(originalWidth * scaleFactor);
    const newHeight = Math.round(originalHeight * scaleFactor);

    console.log(`[MediaService] üî¢ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è: ${scaleFactor.toFixed(3)}`);
    console.log(`[MediaService] üìê –ü—Ä–æ–ø–æ—Ä—Ü–∏–∏: ${(originalWidth / originalHeight).toFixed(3)} ‚Üí ${(newWidth / newHeight).toFixed(3)}`);

    return {
      width: newWidth,
      height: newHeight,
      needsResize: true
    };
  }

  /**
   * –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –∏–∑–º–µ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä –∏ —Å–∂–∏–º–∞–µ—Ç
   */
  private async optimizeImage(uri: string, originalName: string): Promise<{ uri: string; size: number; name: string }> {
    try {
      if (!this.optimizationSettings.enableOptimization) {
        // –ï—Å–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
        const fileInfo = await FileSystem.getInfoAsync(uri);
        return {
          uri,
          size: fileInfo.size || 0,
          name: originalName
        };
      }

      console.log(`[MediaService] üîß –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${originalName}`);

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
      const fileInfo = await FileSystem.getInfoAsync(uri);
      const originalSize = fileInfo.size || 0;

      console.log(`[MediaService] üìè –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${(originalSize / 1024).toFixed(1)} KB`);

      // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
      const imageInfo = await ImageManipulator.manipulateAsync(uri, [], { base64: false });

      console.log(`[MediaService] üìê –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ${imageInfo.width}x${imageInfo.height}`);

      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
      const optimalSize = this.calculateOptimalSize(
        imageInfo.width,
        imageInfo.height,
        this.optimizationSettings.maxImageWidth,
        this.optimizationSettings.maxImageHeight
      );

      console.log(`[MediaService] üìê –ù–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ${optimalSize.width}x${optimalSize.height}`);

      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è ImageManipulator
      const manipulateActions = [];

      // –î–æ–±–∞–≤–ª—è–µ–º resize —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä—ã –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å
      if (optimalSize.needsResize) {
        manipulateActions.push({
          resize: {
            width: optimalSize.width,
            height: optimalSize.height,
          }
        });
      }

      // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const manipulatedImage = await ImageManipulator.manipulateAsync(
        uri,
        manipulateActions,
        {
          compress: this.optimizationSettings.imageQuality,
          format: ImageManipulator.SaveFormat.JPEG, // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JPEG –¥–ª—è –ª—É—á—à–µ–≥–æ —Å–∂–∞—Ç–∏—è
          base64: false
        }
      );

      // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
      const optimizedFileInfo = await FileSystem.getInfoAsync(manipulatedImage.uri);
      const optimizedSize = optimizedFileInfo.size || 0;

      const compressionRatio = originalSize > 0 ? ((originalSize - optimizedSize) / originalSize * 100) : 0;

      console.log(`[MediaService] ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${(optimizedSize / 1024).toFixed(1)} KB`);
      console.log(`[MediaService] üìâ –°–∂–∞—Ç–∏–µ: ${compressionRatio.toFixed(1)}%`);
      console.log(`[MediaService] üìê –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ${manipulatedImage.width}x${manipulatedImage.height}`);

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .jpg
      const nameWithoutExt = originalName.replace(/\.[^/.]+$/, "");
      const optimizedName = `${nameWithoutExt}_optimized.jpg`;

      return {
        uri: manipulatedImage.uri,
        size: optimizedSize,
        name: optimizedName
      };

    } catch (error) {
      console.error(`[MediaService] ‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${originalName}:`, error);

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
      const fileInfo = await FileSystem.getInfoAsync(uri);
      return {
        uri,
        size: fileInfo.size || 0,
        name: originalName
      };
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
   */
  private async checkVideoSize(uri: string, originalName: string): Promise<{ uri: string; size: number; name: string; warning?: string }> {
    try {
      const fileInfo = await FileSystem.getInfoAsync(uri);
      const size = fileInfo.size || 0;

      console.log(`[MediaService] üé• –í–∏–¥–µ–æ ${originalName}: ${(size / 1024 / 1024).toFixed(1)} MB`);

      let warning: string | undefined;

      if (size > this.optimizationSettings.maxVideoSize) {
        warning = `–í–∏–¥–µ–æ —Ñ–∞–π–ª –±–æ–ª—å—à–æ–π (${(size / 1024 / 1024).toFixed(1)} MB). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–∂–∞—Ç—å –¥–æ ${(this.optimizationSettings.maxVideoSize / 1024 / 1024).toFixed(0)} MB.`;
        console.warn(`[MediaService] ‚ö†Ô∏è ${warning}`);
      }

      return {
        uri,
        size,
        name: originalName,
        warning
      };

    } catch (error) {
      console.error(`[MediaService] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–µ–æ ${originalName}:`, error);
      return {
        uri,
        size: 0,
        name: originalName
      };
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã –≤ Supabase Storage
   */
  async uploadMediaFiles(files: Array<{ uri: string, type: 'image' | 'video', name: string, size: number }>): Promise<MediaUploadResult> {
    try {
      console.log('[MediaService] üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤...');
      console.log(`[MediaService] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ Storage
      if (!this.ENABLE_STORAGE) {
        console.log('[MediaService] ‚ö†Ô∏è Storage –æ—Ç–∫–ª—é—á–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
        return {
          success: false,
          error: 'Storage –æ—Ç–∫–ª—é—á–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö'
        };
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Supabase
      if (!supabase) {
        console.error('[MediaService] ‚ùå Supabase –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return {
          success: false,
          error: 'Supabase –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
        };
      }

      console.log('[MediaService] ‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      console.log(`[MediaService] üåê Supabase URL: ${supabase.supabaseUrl}`);
      console.log(`[MediaService] üîë Auth: ${supabase.supabaseKey ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
      try {
        await this.ensureAuthentication();
      } catch (authError) {
        console.warn('[MediaService] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authError);
        console.log('[MediaService] üí° –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –∞–Ω–æ–Ω–∏–º–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º bucket –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
      let bucketReady = false;
      try {
        bucketReady = await this.ensureBucketExists();
      } catch (bucketError) {
        console.error('[MediaService] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ bucket:', bucketError);
        return {
          success: false,
          error: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ö—Ä–∞–Ω–∏–ª–∏—â—É —Ñ–∞–π–ª–æ–≤.'
        };
      }

      if (!bucketReady) {
        return {
          success: false,
          error: '–•—Ä–∞–Ω–∏–ª–∏—â–µ —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
        };
      }

      // –°–Ω–∞—á–∞–ª–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
      console.log('[MediaService] üîß –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã...');
      const optimizedFiles = await Promise.all(
        files.map(async (file, index) => {
          let processedFile = file;

          if (file.type === 'image') {
            // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const optimized = await this.optimizeImage(file.uri, file.name);
            processedFile = {
              uri: optimized.uri,
              type: file.type,
              name: optimized.name,
              size: optimized.size
            };
          } else if (file.type === 'video') {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ
            const checked = await this.checkVideoSize(file.uri, file.name);
            processedFile = {
              uri: checked.uri,
              type: file.type,
              name: checked.name,
              size: checked.size
            };

            if (checked.warning) {
              console.warn(`[MediaService] ‚ö†Ô∏è ${checked.warning}`);
            }
          }

          return processedFile;
        })
      );

      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      const totalOptimizedSize = optimizedFiles.reduce((sum, file) => sum + file.size, 0);
      console.log(`[MediaService] üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: ${(totalOptimizedSize / 1024 / 1024).toFixed(1)} MB`);

      const uploadPromises = optimizedFiles.map(async (file, index) => {
        try {
          // –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
          const fileExtension = file.name.split('.').pop() || (file.type === 'image' ? 'jpg' : 'mp4');

          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
          const fileName = `${Date.now()}_${index}.${fileExtension}`;
          const filePath = `orders/${fileName}`;

          console.log(`[MediaService] üìÅ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª ${file.name} –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏...`);
          console.log(`[MediaService] üì± URI: ${file.uri}`);
          console.log(`[MediaService] üìè –†–∞–∑–º–µ—Ä: ${(file.size / 1024).toFixed(1)} KB`);
          console.log(`[MediaService] üéØ –¢–∏–ø: ${file.type}`);

          // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –≤ React Native
          const base64 = await FileSystem.readAsStringAsync(file.uri, {
            encoding: FileSystem.EncodingType.Base64,
          });

          // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º base64 –≤ ArrayBuffer –¥–ª—è Supabase
          const arrayBuffer = decode(base64);

          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π MIME type
          const contentType = file.type === 'image' ? 'image/jpeg' :
            file.type === 'video' ? 'video/mp4' :
              file.name.toLowerCase().includes('.png') ? 'image/png' :
                file.name.toLowerCase().includes('.jpg') || file.name.toLowerCase().includes('.jpeg') ? 'image/jpeg' :
                  'application/octet-stream';

          console.log(`[MediaService] üè∑Ô∏è Content-Type: ${contentType}`);
          console.log(`[MediaService] üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø—É—Ç—å: ${filePath}`);

          // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Supabase Storage
          const { data, error } = await supabase.storage
            .from(this.BUCKET_NAME)
            .upload(filePath, arrayBuffer, {
              contentType: contentType,
              upsert: false
            });

          if (error) {
            console.error(`[MediaService] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ ${file.name}:`, error);

            // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ RLS –æ—à–∏–±–æ–∫
            if (error.message?.includes('row-level security policy')) {
              console.error('');
              console.error('üîí RLS POLICY ERROR - –ö–ê–ö –ò–°–ü–†–ê–í–ò–¢–¨:');
              console.error('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard ‚Üí Storage');
              console.error('2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ bucket "order-media" PUBLIC');
              console.error('3. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª–∏—Ç–∏–∫—É: SELECT —Å —É—Å–ª–æ–≤–∏–µ–º "true"');
              console.error('4. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª–∏—Ç–∏–∫—É: INSERT —Å —É—Å–ª–æ–≤–∏–µ–º "true"');
              console.error('5. –ò–ª–∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ QUICK_STORAGE_FIX.md');
              console.error('');
            } else if (error.message?.includes('JWT') || error.message?.includes('session missing')) {
              console.error('');
              console.error('üîë AUTHENTICATION ERROR - –†–ï–®–ï–ù–ò–ï:');
              console.error('1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç: STORAGE_POLICIES_ANONYMOUS.sql');
              console.error('2. –≠—Ç–æ —Ä–∞–∑—Ä–µ—à–∏—Ç –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –≤ order-media bucket');
              console.error('3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL');
              console.error('');
            } else if (error.message?.includes('not found') || error.message?.includes('bucket')) {
              console.error('');
              console.error('üì¶ BUCKET ERROR - –†–ï–®–ï–ù–ò–ï:');
              console.error('1. –°–æ–∑–¥–∞–π—Ç–µ bucket "order-media" –≤ Supabase Dashboard');
              console.error('2. Storage ‚Üí New Bucket ‚Üí Name: order-media');
              console.error('3. Public bucket: ‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–∫–ª—é—á–∏—Ç–µ');
              console.error('4. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –∏–∑ STORAGE_POLICIES_ANONYMOUS.sql');
              console.error('');
            } else if (error.message?.includes('size') || error.message?.includes('limit')) {
              console.error('');
              console.error('üìè SIZE ERROR - —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π');
              console.error(`–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${(file.size / 1024 / 1024).toFixed(1)} –ú–ë`);
              console.error('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ Supabase');
              console.error('');
            }

            throw error;
          }

          // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
          const { data: urlData } = supabase.storage
            .from(this.BUCKET_NAME)
            .getPublicUrl(filePath);

          console.log(`[MediaService] üìÑ –§–∞–π–ª ${file.name}:`);
          console.log(`[MediaService] üìÅ –ü—É—Ç—å: ${filePath}`);
          console.log(`[MediaService] üîó URL: ${urlData.publicUrl}`);

          return urlData.publicUrl;
        } catch (error) {
          console.error(`[MediaService] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ ${file.name}:`, error);
          throw error;
        }
      });

      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
      const urls = await Promise.all(uploadPromises);

      console.log(`[MediaService] ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${urls.length} —Ñ–∞–π–ª–æ–≤`);

      return {
        success: true,
        urls
      };

    } catch (error) {
      console.error('[MediaService] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:', error);

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –∏ –¥–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
      let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã';

      if (error instanceof Error) {
        if (error.message?.includes('row-level security policy')) {
          errorMessage = '–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Storage. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏.';
          console.error('');
          console.error('üí° –ë–´–°–¢–†–û–ï –†–ï–®–ï–ù–ò–ï:');
          console.error('–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞ QUICK_STORAGE_FIX.md');
          console.error('');
        } else if (error.message?.includes('JWT') || error.message?.includes('session missing')) {
          errorMessage = '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ Storage.';
          console.error('');
          console.error('üí° –ë–´–°–¢–†–û–ï –†–ï–®–ï–ù–ò–ï:');
          console.error('1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç: STORAGE_POLICIES_ANONYMOUS.sql');
          console.error('2. –≠—Ç–æ —Ä–∞–∑—Ä–µ—à–∏—Ç –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤');
          console.error('');
        } else if (error.message?.includes('not found') || error.message?.includes('bucket')) {
          errorMessage = 'Bucket "order-media" –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –≤ Dashboard.';
          console.error('');
          console.error('üí° –ë–´–°–¢–†–û–ï –†–ï–®–ï–ù–ò–ï:');
          console.error('1. Supabase Dashboard ‚Üí Storage ‚Üí New Bucket');
          console.error('2. Name: order-media, Public: ‚úÖ');
          console.error('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL: STORAGE_POLICIES_ANONYMOUS.sql');
          console.error('');
        } else if (error.message?.includes('size') || error.message?.includes('limit')) {
          errorMessage = '–§–∞–π–ª—ã —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –º–µ–Ω—å—à–∏–µ —Ñ–∞–π–ª—ã.';
        } else if (error.message?.includes('network') || error.message?.includes('fetch')) {
          errorMessage = '–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.';
        }
      }

      return {
        success: false,
        error: errorMessage
      };
    }
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã –∏–∑ Storage (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
   */
  async deleteMediaFiles(urls: string[]): Promise<boolean> {
    try {
      const filePaths = urls.map(url => {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—É—Ç—å —Ñ–∞–π–ª–∞ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ URL
        const urlParts = url.split('/');
        return urlParts.slice(-2).join('/'); // orders/filename.ext
      });

      const { error } = await supabase.storage
        .from(this.BUCKET_NAME)
        .remove(filePaths);

      if (error) {
        console.error('[MediaService] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:', error);
        return false;
      }

      return true;
    } catch (error) {
      console.error('[MediaService] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:', error);
      return false;
    }
  }
}

export const mediaService = MediaService.getInstance(); 