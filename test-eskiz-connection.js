/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Eskiz.uz
 * –ó–∞–ø—É—Å–∫: node test-eskiz-connection.js
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

const testEskizConnection = async () => {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Eskiz.uz...\n');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const email = process.env.ESKIZ_EMAIL;
  const password = process.env.ESKIZ_PASSWORD;
  const baseUrl = process.env.ESKIZ_BASE_URL || 'https://notify.eskiz.uz/api';

  console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
  console.log(`Email: ${email ? email : '‚ùå –ù–ï –ù–ê–°–¢–†–û–ï–ù'}`);
  console.log(`Password: ${password ? '‚úÖ –ù–ê–°–¢–†–û–ï–ù' : '‚ùå –ù–ï –ù–ê–°–¢–†–û–ï–ù'}`);
  console.log(`Base URL: ${baseUrl}\n`);

  if (!email || !password) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã ESKIZ_EMAIL –∏–ª–∏ ESKIZ_PASSWORD –≤ —Ñ–∞–π–ª–µ .env');
    process.exit(1);
  }

  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
    
    const authResponse = await fetch(`${baseUrl}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: email,
        password: password,
      }),
    });

    const authData = await authResponse.json();

    if (!authResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authData);
      return;
    }

    if (!authData.data || !authData.data.token) {
      console.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authData);
      return;
    }

    console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
    console.log(`üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${authData.data.token.substring(0, 20)}...`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    console.log('\nüë§ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...');
    
    const userResponse = await fetch(`${baseUrl}/auth/user`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${authData.data.token}`,
      },
    });

    if (userResponse.ok) {
      const userData = await userResponse.json();
      console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ–ª—É—á–µ–Ω–∞:');
      console.log(`üìß Email: ${userData.email}`);
      console.log(`üë§ –ò–º—è: ${userData.name}`);
      console.log(`üìä –°—Ç–∞—Ç—É—Å: ${userData.status}`);
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    console.log('\nüí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞...');
    
    const balanceResponse = await fetch(`${baseUrl}/user/get-limit`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${authData.data.token}`,
      },
    });

    if (balanceResponse.ok) {
      const balanceData = await balanceResponse.json();
      console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å: ${balanceData.balance} SMS`);
      
      if (balanceData.balance < 10) {
        console.warn('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å! –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç.');
      }
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üì± Eskiz.uz –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ SMS –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
    console.log('\nüîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
    console.log('1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å email –∏ –ø–∞—Ä–æ–ª—è –≤ .env');
    console.log('2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É');
    console.log('3. –°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ my.eskiz.uz');
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testEskizConnection();
